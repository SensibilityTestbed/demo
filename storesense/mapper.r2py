"""Collects wifi/location info and stores in sensevis

See sensevis.poly.edu for stored values.

"""

dy_import_module_symbols("sensorlib.r2py")
storesense = dy_import_module('storesense.r2py')

# get a connection to communicate with sensors
port =  get_connectionport()
sensor_socket = getconnection(port)

# define sensor/method/arg in code: 
request_data(sensor_socket, 'startLocating', [])

# try to read current location
location_data = request_data(sensor_socket, 'readLocation', []) 

# if location was not retrieved, keep trying
while not location_data:
  sleep(5)
  location_data = request_data(sensor_socket, 'readLocation', [])

# wifi must be enabled
if request_data(sensor_socket, 'checkWifiState', []):
  # scan for wifi access pts
  request_data(sensor_socket, 'wifiStartScan', [])
  # list of access points found during the most recent Wifi scan 
  wifi_results = request_data(sensor_socket, 'wifiGetScanResults', [])


# initialize storesense 
device_id = 'yanyan'
storesense.init()
data = []
measurements = {}
  
# Collect some data...
for wifi in wifi_results:
  # store some location data
  measurements['gps'] = location_data
  measurements['wifi'] = wifi
  # Each data entry needs a timestamp
  entry = storesense.storesense_timestamp(measurements)
  data.append(entry)
  log(data, '\n')

# store/send location/wifi info to sensevis.poly.edu
storesense.storesense_post(data, device_id, 'wifi', 'nsdi15demo', 0)

# stop
request_data(sensor_socket, 'stopLocating', [])
sensor_socket.close()

