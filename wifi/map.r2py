"""Collects wifi/location info 
"""

sensorlib = dy_import_module("sensorlib.r2py")
#storesense = dy_import_module('storesense.r2py')

def scrub_unicode(string):
  outstring = ""
  for char in string:
    if ord(char) <= 128:
      outstring += char
    else:
      outstring += "."
  return outstring

log(getmyip(), '\n')

# get a connection to communicate with sensors
port =  sensorlib.get_connectionport()
sensor_socket = sensorlib.getconnection(port)

# define sensor/method/arg in code: 
sensorlib.request_data(sensor_socket, 'startLocating', [])

# try to read current location
location_data = sensorlib.request_data(sensor_socket, 'readLocation', []) 

# if location was not retrieved, keep trying
if not location_data:
  # will try to get location data RETRIES times at most before giving up
  RETRIES = 5
  for retry in range(RETRIES):
    sleep(2)
    location_data = sensorlib.request_data(sensor_socket, 'readLocation', [])
    if location_data:
      break
  else:
    location_data = sensorlib.request_data(sensor_socket, 'getLastKnownLocation', [])

# find out which provider gave the location info
# location_data is in the form {u'network': {u'bearing': 0, u'altitude': 0, u'time': x, 
# u'longitude': x, u'provider': u'network', u'latitude': x, u'speed': 0, u'accuracy': x}}
sensorlib.request_data(sensor_socket, 'stopLocating', []) 
assert len(location_data.keys()) >= 1   # should return at least one provider

log(str(location_data), '\n\n')

location = None
for i in range(len(location_data.keys())):
  provider = location_data.keys()[i]
  location = location_data[provider]
  if location != None:
    log(str(location), '\n\n')
    break

# get infor we need
latitude = location["latitude"]
longitude = location["longitude"]
accuracy = location["accuracy"]
log("\nprovider: " + provider + ", latitude: " + str(latitude) + ", longitude: " + str(longitude) + ", accuracy: " + str(accuracy) + '\n\n')

# wifi must be enabled
if sensorlib.request_data(sensor_socket, 'checkWifiState', []):
  # scan for wifi access pts
  #sensorlib.request_data(sensor_socket, 'wifiStartScan', [])
  # list of access points found during the most recent Wifi scan 
  wifi_results = sensorlib.request_data(sensor_socket, 'wifiGetConnectionInfo', [])

# get infor we need
ssid = scrub_unicode(wifi_results["ssid"])
speed = wifi_results["link_speed"]  # Mbps
rssi = wifi_results["rssi"]  # dBm
log("SSID: " + str(ssid) + ", speed: " + str(speed) + "Mbps, " + "RSSI: " + str(rssi) + "dBm\n")

myfilelist = listfiles()
filename = "location_wifi"

if filename in myfilelist:
  removefile(filename)  

myfileobject = openfile(filename, True)
resultstring = provider + '\t' + str(latitude) + '\t' + str(longitude) + '\t' + str(accuracy) + '\n'
resultstring = resultstring + str(ssid) + '\t' + str(speed) + '\t' + str(rssi) + '\n'

myfileobject.writeat(resultstring, 0)
myfileobject.close()

# stop
sensor_socket.close()

